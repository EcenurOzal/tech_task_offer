import 'package:flutter/material.dart';

import '../../extension/context_extensions.dart';
import 'font_weight.dart';

class AppText extends Text {
  const AppText(super.data, {super.key});

  //? display large
  //? Font size: 57px

  AppText.displayLarge(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
    double? textScale,
  }) : super(
          style: TextStyle(
            fontSize: 57,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? display medium
  //? Font size: 45px

  AppText.displayMedium(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 45,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? display small
  //? Font size: 3opx

  AppText.displaySmall(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 30,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? headline large
  //? Font size: 32px

  AppText.headlineLarge(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 32,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? headline medium
  //? Font size: 28px

  AppText.headlineMedium(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 28,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? headline small
  //? Font size: 24px

  AppText.headlineSmall(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 32,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? title large
  //? Font size: 22px

  AppText.titleLarge(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 22,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? title medium
  //? Font size: 20px

  AppText.titleMedium(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 20,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? title small
  //? Font size: 18px

  AppText.titleSmall(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 18,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? body large
  //? Font size: 18px

  AppText.bodyLarge(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign = TextAlign.justify,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 18,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? body medium
  //? Font size: 14px

  AppText.bodyMedium(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 14,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );

  //? body small
  //? Font size: 12px

  AppText.bodySmall(
    BuildContext context,
    super.data, {
    super.key,
    Color? color,
    FontStyle? fontStyle,
    int? maxLines,
    TextOverflow? overflow,
    Locale? locale,
    Color? selectionColor,
    String? semanticsLabel,
    bool? softWrap,
    StrutStyle? strutStyle,
    TextAlign? textAlign,
    TextDirection? textDirection,
    TextHeightBehavior? textHeightBehavior,
    double? textScaleFactor,
    TextWidthBasis? textWidthBasis,
    AppFontWeight? fontWeight,
    bool? inherit,
    Color? backgroundColor,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    Paint? foreground,
    Paint? background,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) : super(
          style: TextStyle(
            fontSize: 12,
            fontStyle: fontStyle,
            fontWeight: fontWeight?.rawValue ?? AppFontWeight.v4.rawValue,
            letterSpacing: 0.16,
            wordSpacing: wordSpacing,
            textBaseline: textBaseline,
            locale: locale,
            foreground: foreground,
            background: background,
            decoration: decoration,
            decorationColor: decorationColor,
            decorationStyle: decorationStyle,
            decorationThickness: decorationThickness,
            color: color ?? context.xMaterialColorTheme.onSurface,
          ),
        );
}
